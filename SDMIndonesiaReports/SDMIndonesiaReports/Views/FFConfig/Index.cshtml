@using SDMIndonesiaReports.App_GlobalResources;
@using Resources;
@using SDMIndonesiaReports.Shared;
@model SDMIndonesiaReports.Models.CustomModels.FFConfigVM
@{
    ViewBag.Title = Resources.Pages_Resources.ffConfig;
    var classDiv = (SDMIndonesiaReports.Shared.CultureHelper.IsRighToLeft()) ? "k-rtl" : "portlet-body";
    string columnHeaderStyle = "background-color: #DDD; font-size: 14px; font-weight: 400; color: #666;   font-size: 14px; font-weight: 700; font-color: #555555; white-space: normal;text-align: center;";
    SessionContainer.BreadCrumbText = new List<string>();
    SessionContainer.BreadCrumbLinks = new List<string>();
    SessionContainer.BreadCrumbText.Add(Pages_Resources.ffConfig);
    SessionContainer.BreadCrumbLinks.Add(Url.Action("Index", "FFConfig"));
}
<script type="text/javascript">

    $(function () {
        $(".k-grid-content").css("height", "20px");
    });
</script>
@*<style>
   .primary {
    background-color: #64a1d5;
    background-image: linear-gradient(to bottom, #64a1d5, #428bca);
    color: #fff;
    border-color: #428bca;
    min-width: 70px;
}
.primary:hover {
    background-color: #428bca;
    color: #fff;
    border-color: #428bca;
}
.primary.k-state-disabled, .primary.k-state-disabled:hover {
    background-color: #8dc5e1;
    color: #fff;
}
</style>*@
<div class="row-fluid">
    <div class="span6 responsive" data-tablet="span12 fix-offset" data-desktop="span6" style="width: 100%;">
        <div class="portlet box grey">
            <div class="portlet-title">
                    <div class="caption"><i class="icon-user"></i>@Resources.Pages_Resources.ffConfig</div>
                        <div class="actions">
                            <div class="btn-group">
                                @*@(Html.Kendo().ToolBar().Name("Export"))
                                    {

                                    }
                                )*@

                                @*<a class="btn green" href="#" data-toggle="dropdown">
                                    <i class="icon-cogs"></i> @Global_Label_Resource.Export
                                    <i class="icon-angle-down"></i>
                                </a>

                                <ul class="dropdown-menu pull-right">
                                    <li>
                                        <a id="ExportPdfbtn" data-export="yes" href="@Url.Action("ExportPdf", "FFConfig", new { filter = "~", sort = "~", state = "~", countryID = "~", periodID = "~" })">
                                            <i class="@Global_UI_Resource.IconDownload"></i>Export Pdf
                                        </a>
                                    </li>
                                    <li>
                                        <a id="ExportXlsbtn" data-export="yes" href="@Url.Action("ExportXls", "FFConfig", new { filter = "~", sort = "~", state = "~", countryID = "~", periodID = "~" })">
                                            <i class="@Global_UI_Resource.IconDownload"></i>Export Xls
                                        </a>
                                    </li>
                                </ul>*@
                            </div>
                        </div>
                </div>

            <div class="clearfix">
                <div class="pull-right">

                    @(Html.Kendo().DropDownList()
                              .Name("Country")
                              .DataTextField("Text")
                              .DataValueField("Value")
                              .BindTo(ViewBag.CountriesDL as List<SelectListItem>)
                              .OptionLabel("Select Country")
                            //.Events(e => e.Change("reloadGrid"))
                    )

                    @(Html.Kendo().DropDownList()
                              .Name("Periods")
                              .DataTextField("Text")
                              .DataValueField("Value")
                              .DataSource(source => source.Read(read =>
                              {
                                  read.Action("Periods_Read", "FFConfig").Data("getCountry");
                              })
                              .ServerFiltering(true)
                              )
                            // .Events(e => { e.Change("reloadGrid"); })
                              .CascadeFrom("Country")
                              .OptionLabel(new { Text = "Current Period", Value = (int?)null })
                    )
                    @*<button type="button" id="kendoIconButton" data-role="button" class="k-button k-button-icontext" role="button" aria-disabled="false" tabindex="0">
               @Global_Label_Resource.viewreport
            </button>*@
                    

                    <a id="kendoIconButton" class="btn blue" style="height:14px; width:auto;margin-top:1px; margin-right:10px; text-align:center; line-height:14px" >@Global_Label_Resource.viewreport</a>
                        
                </div>

                </div>
            <div class="@classDiv">
                @(Html.Kendo().Grid<SDMIndonesiaReports.Models.CustomModels.FFConfigVM>()
                .Name("grid")

                           .ToolBar(tools =>
                                {
                                    tools.Template(@<div>
                                        <a class="k-button" data-export="yes" href="@Url.Action("ExportXls", "FFConfig", new { filter = "~", sort = "~", state = "~", countryID = "~", periodID = "~" })"><span class='k-icon k-i-excel'></span> Export to Excel</a>
                                        <a class="k-button " data-export="yes" href="@Url.Action("ExportPdf", "FFConfig", new { filter = "~", sort = "~", state = "~", countryID = "~", periodID = "~" })"><span class='k-icon k-i-pdf'></span> Export to PDF</a>
                                    </div>);


                                })
.Columns(columns =>
{
    columns.Bound(m => m.Area).HeaderHtmlAttributes(new { style = columnHeaderStyle });
    columns.Bound(m => m.HCRName).HeaderHtmlAttributes(new { style = columnHeaderStyle });
    columns.Bound(m => m.Job).Title("Position").HeaderHtmlAttributes(new { style = columnHeaderStyle });
    columns.Bound(m => m.Status).Title("Status").HeaderHtmlAttributes(new { style = columnHeaderStyle });
    columns.Bound(m => m.AM).HeaderHtmlAttributes(new { style = columnHeaderStyle });
    columns.Bound(m => m.SM).HeaderHtmlAttributes(new { style = columnHeaderStyle });

})


.Sortable()
.Groupable()
                                .Scrollable(s => s.Height("Auto"))
.AutoBind(false)
.Filterable()
.Resizable(resize => resize.Columns(true))
.Reorderable(reorder => { reorder.Columns(true); })
.DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .ServerOperation(true)


       .Events(events =>
                    {
                        events.Change("onDataBound");
                    })
    .PageSize(10)
    .Read(read => read.Action("FFConfig_Read", "FFConfig").Data("getParameters")))
            .Pageable(pageable => { pageable.PageSizes(true); pageable.Input(true); pageable.Numeric(true); pageable.Refresh(true); })

                )
            </div>

            </div>


           
        </div>
    </div>

@section scripts{
    <script type="text/javascript">

   

        function getParameters() {
            if ($("#Country").val() != null) {
                return {
                    countryID: $("#Country").val(),
                    periodID: $("#Periods").val()

                };
            }

        };
        function getCountry() {

            return {
                countryID: $("#Country").val()

            };
        };
        function reloadGrid() {
            //do a read request to re-fill the grid with the existing data configurations
           
            if ($("#Country").val() != null)
            {
                var grid = $('#grid').data('kendoGrid');
                grid.dataSource.read();
                grid.dataSource.page(1);
                grid.options.scrollable = false;
                //grid.refresh();
               
            }
          
           
        }

    
        function onDataBound(e) {

            var grid = $('#grid').data('kendoGrid');
            if (grid.dataSource.view().length != 0) {

                $(".k-grid-content").removeAttr("style");
            }
            else {
                $(".k-grid-content").css("height", "20px");
            }
            var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
          .options.parameterMap({

              page: grid.dataSource.page(),
              sort: grid.dataSource.sort(),
              filter: grid.dataSource.filter(),
              take: grid.dataSource.take(),
              countryID: $("#Country").val(),
              periodID: $("Periods").val()

          });


            $("[dataexport='yes'],[data-export='yes']").each(function () {
                // Get its 'href' attribute - the URL where it would navigate to
                var href = $(this).attr('href');

                // Update the 'page' parameter with the grid's current page
                href = href.replace(/page=([^&]*)/, 'page=' + requestObject.page || '~');

                // Update the 'sort' parameter with the grid's current sort descriptor
                href = href.replace(/sort=([^&]*)/, 'sort=' + requestObject.sort || '~');

                // Update the 'pageSize' parameter with the grid's current pageSize
                href = href.replace(/pageSize=([^&]*)/, 'pageSize=' + grid.dataSource._pageSize);

                //update filter descriptor with the filters applied
                href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));


                href = href.replace(/countryID=([^&]*)/, 'countryID=' + requestObject.countryID || '~');

                href = href.replace(/periodID=([^&]*)/, 'periodID=' + requestObject.periodID || '~');
                // Update the 'href' attribute
                $(this).attr('href', href);
            });

        }
        $("#kendoIconButton").click(function () {
            //$("#kendoIconButton").blur();
            reloadGrid();
        });
    </script>
    
}
