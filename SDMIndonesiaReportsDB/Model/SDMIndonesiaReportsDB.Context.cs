//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SDMIndonesiaReportsDB.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SDW_TargetingEntities : DbContext
    {
        public SDW_TargetingEntities()
            : base("name=SDW_TargetingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CountryPeriod> CountryPeriods { get; set; }
        public virtual DbSet<CustomerBranch> CustomerBranches { get; set; }
        public virtual DbSet<CustomerGroup> CustomerGroups { get; set; }
        public virtual DbSet<CustomerSector> CustomerSectors { get; set; }
        public virtual DbSet<EmployeeLog> EmployeeLogs { get; set; }
        public virtual DbSet<EmployeeProfile> EmployeeProfiles { get; set; }
        public virtual DbSet<EmployeeRecord> EmployeeRecords { get; set; }
        public virtual DbSet<GeographicalArea> GeographicalAreas { get; set; }
        public virtual DbSet<Level> Levels { get; set; }
        public virtual DbSet<Period> Periods { get; set; }
        public virtual DbSet<Profile> Profiles { get; set; }
        public virtual DbSet<ProfileAdditionalAccount> ProfileAdditionalAccounts { get; set; }
        public virtual DbSet<ProfileGeographicalArea> ProfileGeographicalAreas { get; set; }
        public virtual DbSet<SalesTeam> SalesTeams { get; set; }
        public virtual DbSet<SalesTeamType> SalesTeamTypes { get; set; }
        public virtual DbSet<SystemUser> SystemUsers { get; set; }
    
        public virtual ObjectResult<SP_BudAndAchByAM_Result> SP_BudAndAchByAM(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID, string profilesCSV)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            var profilesCSVParameter = profilesCSV != null ?
                new ObjectParameter("profilesCSV", profilesCSV) :
                new ObjectParameter("profilesCSV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BudAndAchByAM_Result>("SP_BudAndAchByAM", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter, profilesCSVParameter);
        }
    
        public virtual ObjectResult<SP_BudAndAchbyCountry_Result> SP_BudAndAchbyCountry(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID, string profilesCSV)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            var profilesCSVParameter = profilesCSV != null ?
                new ObjectParameter("profilesCSV", profilesCSV) :
                new ObjectParameter("profilesCSV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BudAndAchbyCountry_Result>("SP_BudAndAchbyCountry", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter, profilesCSVParameter);
        }
    
        public virtual ObjectResult<SP_BudAndAchbyHCR_Result> SP_BudAndAchbyHCR(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID, string profilesCSV)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            var profilesCSVParameter = profilesCSV != null ?
                new ObjectParameter("profilesCSV", profilesCSV) :
                new ObjectParameter("profilesCSV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BudAndAchbyHCR_Result>("SP_BudAndAchbyHCR", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter, profilesCSVParameter);
        }
    
        public virtual ObjectResult<SP_BudAndAchBySM_Result> SP_BudAndAchBySM(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID, string profilesCSV)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            var profilesCSVParameter = profilesCSV != null ?
                new ObjectParameter("profilesCSV", profilesCSV) :
                new ObjectParameter("profilesCSV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BudAndAchBySM_Result>("SP_BudAndAchBySM", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter, profilesCSVParameter);
        }
    
        public virtual ObjectResult<SP_CustomerShareReport_Result> SP_CustomerShareReport(Nullable<int> cID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID, string profilesCSV)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("cID", cID) :
                new ObjectParameter("cID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("FromPeriodID", fromPeriodID) :
                new ObjectParameter("FromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("ToPeriodID", toPeriodID) :
                new ObjectParameter("ToPeriodID", typeof(int));
    
            var profilesCSVParameter = profilesCSV != null ?
                new ObjectParameter("profilesCSV", profilesCSV) :
                new ObjectParameter("profilesCSV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CustomerShareReport_Result>("SP_CustomerShareReport", cIDParameter, fromPeriodIDParameter, toPeriodIDParameter, profilesCSVParameter);
        }
    
        public virtual ObjectResult<SP_FFConfig_Result> SP_FFConfig(Nullable<int> queryPeriodID, Nullable<int> empCountry)
        {
            var queryPeriodIDParameter = queryPeriodID.HasValue ?
                new ObjectParameter("queryPeriodID", queryPeriodID) :
                new ObjectParameter("queryPeriodID", typeof(int));
    
            var empCountryParameter = empCountry.HasValue ?
                new ObjectParameter("empCountry", empCountry) :
                new ObjectParameter("empCountry", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FFConfig_Result>("SP_FFConfig", queryPeriodIDParameter, empCountryParameter);
        }
    
        public virtual ObjectResult<SP_FFPerformanceByFFConfig_Result> SP_FFPerformanceByFFConfig(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID, string profilesCSV)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            var profilesCSVParameter = profilesCSV != null ?
                new ObjectParameter("profilesCSV", profilesCSV) :
                new ObjectParameter("profilesCSV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FFPerformanceByFFConfig_Result>("SP_FFPerformanceByFFConfig", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter, profilesCSVParameter);
        }
    
        public virtual ObjectResult<SP_FFPerformanceByFFConfig_AM_Result> SP_FFPerformanceByFFConfig_AM(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID, string profilesCSV)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            var profilesCSVParameter = profilesCSV != null ?
                new ObjectParameter("profilesCSV", profilesCSV) :
                new ObjectParameter("profilesCSV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FFPerformanceByFFConfig_AM_Result>("SP_FFPerformanceByFFConfig_AM", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter, profilesCSVParameter);
        }
    
        public virtual ObjectResult<SP_FFPerformanceByFFConfig_SM_Result> SP_FFPerformanceByFFConfig_SM(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID, string profilesCSV)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            var profilesCSVParameter = profilesCSV != null ?
                new ObjectParameter("profilesCSV", profilesCSV) :
                new ObjectParameter("profilesCSV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FFPerformanceByFFConfig_SM_Result>("SP_FFPerformanceByFFConfig_SM", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter, profilesCSVParameter);
        }
    
        public virtual ObjectResult<SP_GetProfileByPeriods_Result> SP_GetProfileByPeriods(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProfileByPeriods_Result>("SP_GetProfileByPeriods", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter);
        }
    
        public virtual ObjectResult<SP_HHCRPerformanceByProduct_Result> SP_HHCRPerformanceByProduct(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HHCRPerformanceByProduct_Result>("SP_HHCRPerformanceByProduct", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter);
        }
    
        public virtual ObjectResult<SP_TeamToProduct_Result> SP_TeamToProduct(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TeamToProduct_Result>("SP_TeamToProduct", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter);
        }
    
        public virtual ObjectResult<SP_TerritoryBrickbyBrick_Helper_Result> SP_TerritoryBrickbyBrick_Helper(Nullable<int> geoID, Nullable<int> cID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID)
        {
            var geoIDParameter = geoID.HasValue ?
                new ObjectParameter("geoID", geoID) :
                new ObjectParameter("geoID", typeof(int));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("cID", cID) :
                new ObjectParameter("cID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("FromPeriodID", fromPeriodID) :
                new ObjectParameter("FromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("ToPeriodID", toPeriodID) :
                new ObjectParameter("ToPeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TerritoryBrickbyBrick_Helper_Result>("SP_TerritoryBrickbyBrick_Helper", geoIDParameter, cIDParameter, fromPeriodIDParameter, toPeriodIDParameter);
        }
    
        public virtual ObjectResult<SP_TerritoryToBrickByArea_Result> SP_TerritoryToBrickByArea(Nullable<int> countryID, Nullable<int> fromPeriod, Nullable<int> toPeriod)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodParameter = fromPeriod.HasValue ?
                new ObjectParameter("fromPeriod", fromPeriod) :
                new ObjectParameter("fromPeriod", typeof(int));
    
            var toPeriodParameter = toPeriod.HasValue ?
                new ObjectParameter("toPeriod", toPeriod) :
                new ObjectParameter("toPeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TerritoryToBrickByArea_Result>("SP_TerritoryToBrickByArea", countryIDParameter, fromPeriodParameter, toPeriodParameter);
        }
    
        public virtual ObjectResult<SP_TerritorytoBrickbyBrick_getBricks_Result> SP_TerritorytoBrickbyBrick_getBricks(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID, Nullable<int> geoAreaLevel)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            var geoAreaLevelParameter = geoAreaLevel.HasValue ?
                new ObjectParameter("geoAreaLevel", geoAreaLevel) :
                new ObjectParameter("geoAreaLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TerritorytoBrickbyBrick_getBricks_Result>("SP_TerritorytoBrickbyBrick_getBricks", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter, geoAreaLevelParameter);
        }
    
        public virtual ObjectResult<SP_TransactionDetail_Result> SP_TransactionDetail(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TransactionDetail_Result>("SP_TransactionDetail", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter);
        }
    
        public virtual ObjectResult<SP_TransactionSummarybyChannel_getSectorsQtyPerRecord_Result> SP_TransactionSummarybyChannel_getSectorsQtyPerRecord(Nullable<int> geoAreaID, Nullable<int> profileID, Nullable<int> dosageID, Nullable<int> empID, Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID)
        {
            var geoAreaIDParameter = geoAreaID.HasValue ?
                new ObjectParameter("geoAreaID", geoAreaID) :
                new ObjectParameter("geoAreaID", typeof(int));
    
            var profileIDParameter = profileID.HasValue ?
                new ObjectParameter("profileID", profileID) :
                new ObjectParameter("profileID", typeof(int));
    
            var dosageIDParameter = dosageID.HasValue ?
                new ObjectParameter("DosageID", dosageID) :
                new ObjectParameter("DosageID", typeof(int));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TransactionSummarybyChannel_getSectorsQtyPerRecord_Result>("SP_TransactionSummarybyChannel_getSectorsQtyPerRecord", geoAreaIDParameter, profileIDParameter, dosageIDParameter, empIDParameter, countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter);
        }
    
        public virtual ObjectResult<SP_TransactionSummarybyChannel_Helper_Result> SP_TransactionSummarybyChannel_Helper(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TransactionSummarybyChannel_Helper_Result>("SP_TransactionSummarybyChannel_Helper", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter);
        }
    
        public virtual int SP_TransactionSummaryByChannel_Sectors(Nullable<int> countryID, Nullable<int> fromPeriodID, Nullable<int> toPeriodID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var fromPeriodIDParameter = fromPeriodID.HasValue ?
                new ObjectParameter("fromPeriodID", fromPeriodID) :
                new ObjectParameter("fromPeriodID", typeof(int));
    
            var toPeriodIDParameter = toPeriodID.HasValue ?
                new ObjectParameter("toPeriodID", toPeriodID) :
                new ObjectParameter("toPeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TransactionSummaryByChannel_Sectors", countryIDParameter, fromPeriodIDParameter, toPeriodIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetSystemUserCountries(Nullable<int> systemUserID)
        {
            var systemUserIDParameter = systemUserID.HasValue ?
                new ObjectParameter("SystemUserID", systemUserID) :
                new ObjectParameter("SystemUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetSystemUserCountries", systemUserIDParameter);
        }
    }
}
